import asyncio

from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardRemove
from aiogram.utils.exceptions import BotBlocked

from create_bot import dp, bot, bot_address
from keyboards.client_kb import kb_client_1, kb_client_2, kb_client_3, kb_client_6, kb_client_5, kb_client
from school_database import sqlite_db

"""–•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º
"""


@dp.message_handler(commands=['start', 'help'])
async def start_bot(message: types.Message):
    bot_home = bot_address  # –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å—Ç—Ä–æ–∫–æ–π 't.me/bot'
    print(message.from_user.id)
    await bot.send_message(
        message.from_user.id,
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
        f"–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –õ—é—Å–∏ –ñ–∞–±–∏–Ω–æ–π, –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞.\n"
        f"–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º—Å—è –≤ –º–∏—Ä –∫—Ä–∞—Å–∏–≤—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ, –ø–æ–∑–≤–æ–ª—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Ç–µ–±—è —Å –õ—é—Å–µ–π –ø–æ–±–ª–∏–∂–µ.",
        reply_markup=kb_client_1
    )

    await message.delete()
    await message.reply(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –õ–°: {bot_home}')


@dp.message_handler(Text(equals='–ü—Ä–∏–≤–µ—Ç', ignore_case=True))
async def get_work_hours(message: types.Message):
    await bot.send_message(message.from_user.id,
                           "üì∏ **–õ—é—Å—è** - –±—Ä–µ–Ω–¥-—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ –∏ —Ä–∏–ª—Å-–º–µ–π–∫–µ—Ä, —Å–µ–º—å –ª–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å—ä–µ–º–∫–æ–π.\n"
                           "üéì –û–±—É—á–∏–ª–∞ –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 100 —á–µ–ª–æ–≤–µ–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–Ω–æ–π —Å—ä–µ–º–∫–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω. –°–æ–∑–¥–∞–ª–∞ –∫—É—Ä—Å \"–î–µ–ª–æ –≤ –∫–∞–¥—Ä–µ\" –¥–ª—è –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏—è.\n"
                           "üíº –†–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–∞–∫–∏–º–∏ –±—Ä–µ–Ω–¥–∞–º–∏, –∫–∞–∫ zaav_g, ognivo, say da lab.\n"
                           "üé• –ù–∞ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ –õ—é—Å—è –¥–µ–ª–∏—Ç—Å—è —Ñ–∏—à–∫–∞–º–∏ –ø–æ —Å—ä–µ–º–∫–µ –∏ –º–æ–Ω—Ç–∞–∂—É.\n\n"
                           "üîó [–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–ì –∫–∞–Ω–∞–ª](<–≤–∞—à–∞_—Å—Å—ã–ª–∫–∞>) (–ø—Ä–∏–∑—ã–≤ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è)",
                           reply_markup=kb_client_2)


@dp.message_handler(Text(equals='–î–∞–ª–µ–µ', ignore_case=True))
async def get_contacts(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        "üì∏ –§–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –õ—é—Å–∏\n\n"
        "–°–Ω–∏–º–∞—Ç—å –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω - —ç—Ç–æ –Ω–µ –ø—Ä–∏—Ö–æ—Ç—å, –∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –∫–∞–∂–¥–æ–º—É:\n\n"
        "- –õ—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–º–µ–Ω—è—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫—Ä–∞—Å–∏–≤–æ–º —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º –¥–µ–ª–µ.\n"
        "- –ú–∞–º–∞–º-–¥–æ–º–æ—Ö–æ–∑—è–π–∫–∞–º, —á—Ç–æ–±—ã —Å–Ω–∏–º–∞—Ç—å —Å–µ–º–µ–π–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –∏ –≤–∑—Ä–æ—Å–ª–µ–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞.\n"
        "- –≠–∫—Å–ø–µ—Ä—Ç–∞–º –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ —Å–∞–º–∏ –≤–µ–¥—É—Ç –∞–∫–∫–∞—É–Ω—Ç—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏ –ø—Ä–æ–¥–≤–∏–≥–∞—é—Ç—Å—è –≤ –æ–Ω–ª–∞–π–Ω.\n\n"
        "–Ø –∑–Ω–∞—é, –∫–∞–∫ —Å–Ω–∏–º–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ –∏ –ª–µ–≥–∫–æ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω. –î–µ–ª—é—Å—å —Å –≤–∞–º–∏ –≤ –∫–æ—Ä–æ—Ç–∫–æ–º –ø—Ä–∞–∫—Ç–∏–∫—É–º–µ, —Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ 3-—Ö –∫–æ—Ä–æ—Ç–∫–∏—Ö —É—Ä–æ–∫–æ–≤.\n"
        "–°–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –ª–µ–≥–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∞—É—á–∏—Ç—å—Å—è –¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω.\n\n",
        reply_markup=kb_client_3
    )


class YourStateName(StatesGroup):
    photo_sent = State()
    waiting_for_next_message = State()


timers = {}


@dp.message_handler(Text(equals='–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ', ignore_case=True))
async def get_training_courses(message: types.Message, state: FSMContext):
    await bot.send_message(message.from_user.id, 'https://www.youtube.com/watch?v=Lc7pjgJkjzo',
                           reply_markup=ReplyKeyboardRemove())
    await bot.send_message(
        message.from_user.id,
        "üïí –í–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–≥–æ 24 —á–∞—Å–∞! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 7 –º–∏–Ω—É—Ç.\n\n",
    )

    if message.from_user.id in timers:
        timers[message.from_user.id].cancel()

    timers[message.from_user.id] = asyncio.create_task(wait_for_response(message.from_user.id, state))
    await YourStateName.waiting_for_next_message.set()


@dp.message_handler(content_types=types.ContentTypes.PHOTO, state=YourStateName.waiting_for_next_message)
async def process_next_message(message: types.Message, state: FSMContext):
    if message.photo:
        cancel_timer(message.from_user.id)
        await bot.send_message(
            message.from_user.id,
            "üéì –ê –≤–æ—Ç –∏ –Ω–æ–≤—ã–π —É—Ä–æ–∫!\n",
            reply_markup=kb_client_3
        )
        await bot.send_message(message.from_user.id, f'https://www.youtube.com/watch?v=mMqURYfL4Z0',
                               reply_markup=kb_client_6)

        await YourStateName.photo_sent.set()
        await state.reset_state()
    else:
        await bot.send_message(
            message.from_user.id,
            "üì∏ –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ...\n",
            reply_markup=kb_client_3
        )


async def wait_for_response(user_id, state: FSMContext):
    try:
        await asyncio.sleep(10)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥

        ...
        current_state = await state.get_state()
        if current_state != YourStateName.photo_sent.state:
            await bot.send_message(user_id, "üî• –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ —Å–≥–æ—Ä–∏—Ç —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ–±—ã:\n"
                                            "- –£–∑–Ω–∞—Ç—å —Å–µ–∫—Ä–µ—Ç –∫—Ä–∞—Å–∏–≤—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ.\n"
                                            "- –ù–∞–π—Ç–∏ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –≤ —Å—ä–µ–º–∫–µ –∏ –≤—ã–¥–µ–ª—è—Ç—å—Å—è —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö.",
                                   reply_markup=kb_client_3)  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É kb_client_3
    except BotBlocked:
        print(f"Bot was blocked by the user {user_id}")
    finally:
        if user_id in timers:
            del timers[user_id]


def cancel_timer(user_id):
    if user_id in timers:
        timers[user_id].cancel()
        del timers[user_id]


# @dp.message_handler(Text(equals='–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', ignore_case=True))
async def get_trainers_info(message: types.Message):
    await sqlite_db.sql_read_from_teachers(message)


@dp.message_handler(Text(equals='–°—É–ø–µ—Ä', ignore_case=True))
async def set_file(message: types.Message):
    file_path = '/Users/aleksey/Desktop/—Ç—Ä–µ–Ω–∞–∂–µ—Ä –Ω–∞—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏.txt'
    await bot.send_message(
        message.from_user.id,
        "üëè –û—Ç–ª–∏—á–Ω–æ! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å. –í—ã —É–∂–µ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Å—Ç–∏–ª–µ–º –≤ —Å—ä–µ–º–∫–µ.\n"
        "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫ - \"–¢—Ä–µ–Ω–∞–∂–µ—Ä –Ω–∞—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏\". üéÅ"
    )
    with open(file_path, 'rb') as document:
        await bot.send_document(chat_id=message.from_user.id, document=document)
    await bot.send_message(message.from_user.id, f'https://www.youtube.com/watch?v=D2S-b4D0IA0',
                           reply_markup=kb_client_5)


@dp.message_handler(Text(equals='–ü–æ—Å–º–æ—Ç—Ä–µ–ª', ignore_case=True))
async def set_file(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        "üöÄ –ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –∫—É—Ä—Å–µ \"–î–µ–ª–æ –≤ –∫–∞–¥—Ä–µ\" –ø–æ —Å–∞–º–æ–π –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ!\n"
        "–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ—Å—ä–µ–º–∫–µ.\n\n"
        , reply_markup=kb_client
    )


def handlers_register(dp: Dispatcher):
    dp.register_message_handler(start_bot, commands=['start', 'help'])
    dp.register_message_handler(get_contacts, Text(equals='–î–∞–ª–µ–µ', ignore_case=True))
    dp.register_message_handler(get_work_hours, Text(equals='–ü—Ä–∏–≤–µ—Ç', ignore_case=True))
    dp.register_message_handler(get_training_courses, Text(equals='–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ', ignore_case=True))
    dp.register_message_handler(get_trainers_info, Text(equals='–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', ignore_case=True))
    dp.register_message_handler(get_trainers_info, Text(equals='–°—É–ø–µ—Ä', ignore_case=True))
